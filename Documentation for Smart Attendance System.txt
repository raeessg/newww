
## **Documentation for Smart Attendance System**

### **1. Overview**

The Smart Attendance System uses facial recognition to track student attendance. The system integrates with Firebase for data storage and retrieval and displays attendance information in a user-friendly manner.

### **2. Main.py**

**Description:**  
`main.py` is the core script that runs the facial recognition and attendance tracking. It captures video from the webcam, detects faces, compares them with known faces, updates attendance records, and displays the information on-screen.

**Key Components:**
- **Video Capture:** Captures live video feed from the webcam.
- **Face Recognition:** Detects and encodes faces using `face_recognition` library.
- **Firebase Integration:** Retrieves and updates student information and images.
- **Display:** Shows attendance information and student images on the screen using OpenCV and CVZone.

**Important Functions:**
- **Face Detection and Encoding:** Handles real-time face detection and comparison.
- **Database Interaction:** Updates attendance records in Firebase based on the detected face.
- **Image Display:** Shows student information and images on the background.

**Requirements:**
- Python 3.x
- OpenCV
- Face_recognition
- CVZone
- Firebase Admin SDK
- Numpy
- Pickle

### **3. EncodeGenerator.py**

**Description:**  
`EncodeGenerator.py` generates and saves face encodings for students. These encodings are used for face recognition in `main.py`.

**Key Components:**
- **Image Loading:** Loads student images from a specified folder.
- **Face Encoding:** Encodes faces using the `face_recognition` library.
- **Firebase Integration:** Uploads student images to Firebase Storage.
- **Encoding Storage:** Saves face encodings and student IDs to a pickle file.

**Important Functions:**
- **Find Encodings:** Generates face encodings for each student image.
- **Save Encodings:** Saves the encodings and student IDs to a pickle file.

**Requirements:**
- Python 3.x
- OpenCV
- Face_recognition
- Firebase Admin SDK
- Numpy
- Pickle

### **4. AddDataToDatabase.py**

**Description:**  
`AddDataToDatabase.py` adds or updates student information in the Firebase Realtime Database.

**Key Components:**
- **Firebase Integration:** Connects to Firebase Realtime Database.
- **Data Insertion:** Adds student data to the database.

**Important Functions:**
- **Add Data:** Inserts student records into the Firebase database under the 'Students' node.

**Requirements:**
- Python 3.x
- Firebase Admin SDK

### **5. User Manual**

**Getting Started:**
1. **Setup:** Ensure you have the necessary hardware (webcam) and software installed.
2. **Database Configuration:** Ensure Firebase is set up with correct database URL and storage bucket.
3. **Run `EncodeGenerator.py`:** Execute to generate face encodings and upload student images.
4. **Run `AddDataToDatabase.py`:** Add student records to Firebase.
5. **Run `main.py`:** Start the attendance tracking system.

**Using the System:**
- The system captures video from the webcam, detects faces, and compares them to known faces.
- If a face matches a known student, it updates their attendance record and displays their information on-screen.

**Troubleshooting:**
- **Face Not Detected:** Ensure proper lighting and face visibility.
- **Database Issues:** Verify Firebase credentials and database URL.

### **6. Technical Documentation**

**System Architecture:**
- **Frontend:** Captures video, detects faces, and displays results.
- **Backend:** Uses Firebase for data storage and retrieval.
- **Processing:** Face recognition and encoding for attendance tracking.

**Dependencies:**
- **Python Libraries:** OpenCV, face_recognition, cvzone, firebase_admin, numpy, pickle.

**Firebase Configuration:**
- **Database URL:** `https://smartattendancerealtime-default-rtdb.asia-southeast1.firebasedatabase.app/`
- **Storage Bucket:** `smartattendancerealtime.appspot.com`

**File Descriptions:**
- **`main.py`:** Runs the attendance system.
- **`EncodeGenerator.py`:** Generates face encodings and uploads student images.
- **`AddDataToDatabase.py`:** Adds student data to the Firebase Realtime Database.

**Security Considerations:**
- Ensure Firebase credentials are kept secure.
- Limit access to Firebase storage and database as needed.


